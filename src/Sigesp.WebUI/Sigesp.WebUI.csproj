<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <UserSecretsId>aspnet-Sigesp.WebUI-1757DFEF-8A50-4CF6-A39D-79B9DFFE19FC</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Aspose.PDF" Version="22.3.0" />
    <PackageReference Include="ClosedXML" Version="0.95.4" />
    <PackageReference Include="Dapper" Version="2.0.90" />
    <PackageReference Include="ExcelDataReader" Version="3.6.0" />
    <PackageReference Include="ExcelDataReader.DataSet" Version="3.6.0" />
    <PackageReference Include="Microsoft.AspNetCore.Cors" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="3.1.2" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="3.1.2" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="3.1.2" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.2" />
    <PackageReference Include="Microsoft.AspNetCore.Session" Version="2.2.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.2" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.8.2">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="3.1.2" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.1.1" />
    <PackageReference Include="Microsoft.Extensions.Http.Polly" Version="3.1.2" />
    <PackageReference Include="iTextSharp" Version="5.5.13.2" />
    <PackageReference Include="SharpZipLib" Version="1.3.3" />
    <PackageReference Include="System.Linq.Dynamic.Core" Version="1.2.14" />
    <PackageReference Include="System.Text.Encoding.CodePages" Version="6.0.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Sigesp.Infra.CrossCutting.IoC\Sigesp.Infra.CrossCutting.IoC.csproj" />
    <ProjectReference Include="..\Sigesp.Infra.Data\Sigesp.Infra.Data.csproj" />
    <ProjectReference Include="..\Sigesp.Domain\Sigesp.Domain.csproj" />
  </ItemGroup>

  <!-- <ItemGroup>
    
    <NpmPackageFile Include="package.json" />
  </ItemGroup> -->

  <!-- Compute additional metadata for the NpmPackageFile items
  <Target Name="ComputeNpmPackageMetadata">
    <ItemGroup>
      <NpmPackageFile>
        <StampFile>$([System.IO.Path]::Combine(`%(RootDir)%(Directory)`, 'node_modules', '.install-stamp'))</StampFile>
        <WorkingDirectory>%(RootDir)%(Directory)</WorkingDirectory>
        <Command Condition="'$(RestorePackagesWithLockFile)' != 'true'">npm install</Command>
        <Command Condition="'$(RestorePackagesWithLockFile)' == 'true'">npm ci</Command>
      </NpmPackageFile>
    </ItemGroup>
  </Target> -->

  <!-- Run npm install for each NpmPackageFile
  <Target Name="NpmInstall" DependsOnTargets="ComputeNpmPackageMetadata" Inputs="@(NpmPackageFile)" Outputs="%(NpmPackageFile.StampFile)">
    <Exec Command="@(NpmPackageFile->'%(Command)')" WorkingDirectory="%(WorkingDirectory)" />
    <Touch Files="@(NpmPackageFile->'%(StampFile)')" AlwaysCreate="true" />
  </Target> -->

  <!-- Run npm commands (be sure to set the right WorkingDirectory) -->
  <!-- <Target Name="NpmRunBuild" DependsOnTargets="NpmInstall" BeforeTargets="BeforeBuild">
    <Exec Command="npm run build" WorkingDirectory="../Sigesp.WebUI" />
  </Target> -->

  <!-- <Target Name="NpmRunBuild">
    <Exec Command="npm run build" WorkingDirectory="../Sigesp.WebUI" />
  </Target> -->

</Project>